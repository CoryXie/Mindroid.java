page.title=&lt;manifest&gt;
parent.title=The MindroidManifest.xml File
parent.link=manifest-intro.html
@jd:body

<dl class="xml">
<dt>syntax:</dt>
<dd><pre class="stx">&lt;manifest xmlns:<a href="#nspace">mindroid</a>="http://schemas.esrlabs.com/mindroid"
          <a href="#package">package</a>="<i>string</i>"
          mindroid:<a href="#vcode">versionCode</a>="<i>integer</i>"
          mindroid:<a href="#vname">versionName</a>="<i>string</i>" &gt;
    . . .
&lt;/manifest&gt;</pre></dd>

<p>
<dt>contained in:</dt>
<dd><i>none</i></dd>

<p>
<p>
<dt>must contain:</dt>
<dd><code><a href="{@docRoot}guide/topics/manifest/application-element.html">&lt;application&gt;</a></code></dd>

<p>
<dt>description:</dt>
<dd>The root element of the MindroidManifest.xml file.  It must 
contain an <code><a href="{@docRoot}guide/topics/manifest/application-element.html">&lt;application&gt;</a></code> element 
and specify {@code xmlns:mindroid} and {@code package} attributes.</dd>

<dt>attributes:</dt>
<dd>
<dl class="attr">
<dt><a name="nspace"></a>{@code xmlns:mindroid}</dt>
<dd>Defines the Mindroid namespace.  This attribute should always be set 
to "{@code http://schemas.esrlabs.com.com/mindroid}".</dd>

<dt><a name="package"></a>{@code package}</dt>
<dd>A full Java-language-style package name for the application.  The name should 
be unique.  The name may contain uppercase or lowercase letters ('A'
through 'Z'), numbers, and underscores ('_').  However, individual
package name parts may only start with letters.

<p>To avoid conflicts with other developers, you should use Internet domain ownership as the
basis for your package names (in reverse). For example, applications published by E.S.R.Labs start with
<code>com.esrlabs</code>. You should also never use the <code>com.example</code> namespace when
publishing your applications.</p>

  <p>
  The package name serves as a unique identifier for the application.
  It's also the default name for the application process (see the
  <code><a href="{@docRoot}guide/topics/manifest/application-element.html">&lt;application&gt;</a></code>
  element's
  <code><a href="{@docRoot}guide/topics/manifest/application-element.html#aff">process</a></code>
  process</a></code> attribute).
  </p>

  <p class="caution"><strong>Caution:</strong> Once you publish your application, you
<strong>cannot change the package name</strong>. The package name defines your application's
identity, so if you change it, then it is considered to be a different application and users of
the previous version cannot update to the new version.</p>

<dt><a name="vcode"></a>{@code mindroid:versionCode}</dt>
<dd>An internal version number.  This number is used only to determine whether
one version is more recent than another, with higher numbers indicating more 
recent versions.  This is not the version number shown to users; that number 
is set by the {@code versionName} attribute.

  <p>
  The value must be set as an integer, such as "100".  You can define it however
  you want, as long as each successive version has a higher number.  For example,
  it could be a build number.  Or you could translate a version number in "x.y"
  format to an integer by encoding the "x" and "y" separately in the lower and
  upper 16 bits.  Or you could simply increase the number by one each time a new
  version is released.
  </p>
</dd>

<dt><a name="vname"></a>{@code mindroid:versionName}</dt>
<dd>The version number shown to users.  This attribute can be set as a raw 
string or as a reference to a string resource.  The string has no other purpose 
than to be displayed to users.  The {@code versionCode} attribute holds 
the significant version number used internally.
</dd>

</dl>
</dd><!-- end attributes -->

<p>
<dt>see also:</dt>
<dd>
<code><a href="{@docRoot}guide/topics/manifest/application-element.html">&lt;application&gt;</a></code></dd>

</dl>
